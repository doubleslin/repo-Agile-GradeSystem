package pair02SourceCode;

import java.util.Map.Entry;
import java.util.Scanner;
import java.util.TreeMap;

/** ***********************************************************************
*	class UI (user interface)  aUI處理使用界面
*	double[5] weights;  
*	//初始值 lab1 0.1, lab2 0.1, lab3 0.1, midTerm 0.3, finalExam 0.4
*	//注意weights 之和須等於1.0
*	
*	promptCommand()
*	promptID()
*	showFinishMsg()
*	showWelcomeMsg()
*	UI()  建構 aUI
*************************************************************************/
public class UI
{
	
	// UI() 建構子 建構 aGradeSystem
	GradeSystems aGradeSystem;
	Scanner input;

	/** ----------------------------------------------------------------------------------------------------------
		UI() 建構子 
		try 
    		1.call GradeSystem() to建構 aGradeSystem
    
    		2.loop1 until Q (Quit)
		      1.promptID() to get user ID  輸入ID或 Q (結束使用)？ 
      		  2.checkID() to see if the ID is in aGradeSystem
      		  3.showWelcomeMsg()      ex. Welcome李威廷
      		  4.loop2 until E (Exit)
        			promptCommand() to prompt for inputCommand 
      			end loop2
    		end loop1
    		
    		3.showFinishMsg()結束了
    		end try
	-------------------------------------------------------------------------------------------------------------- */
	public UI()
	{
		super();
		input = new Scanner(System.in);
		this.aGradeSystem = new GradeSystems();
	}

	/** -------------------------------------------------------------------------------------------------------------
	* 不斷檢查輸入字串是否是G、R、W、E其中之一，若不是則丟出例外狀況，若是其中之一則依字母做相對應動作
	*           G 顯示成績 (Grade) 
    *           R 顯示排名 (Rank) 
    *           W 更新配分  (Weight) 
    *           E 離開選單 (Exit) 
    *           M 更改分數 (Modify)
	*
	* @param 
	* @return command 用於判別是否E
	* @throws NoSuchCommandExceptions – 
	*			if  不是是G、R、W、E其中之一 則丟出例外狀況
	*
	* Time estimate : 演算法設計後，才獲此資訊，如 O (n)
	* Example:1.螢幕輸入不是G、R、W、E其中之一則丟出例外狀況
	*         2.螢幕輸入是G、R、W、E其中之一則看到效果
	-----------------------------------------------------------------------------------------------------------------*/
	/** -------------------------------------------------------------------------------------------------------------
	//	1. prompt user for inputCommand
	//	2. if inputCommand is not G (Grade),R (Rank), W (Weights), or E (Exit),
	//	   throws an object of NoSuchCommandException  end if
	//	3. if inputCommand is E (Exit) then break
	//	   else: G aGradeSystem.showGrade(ID), R showRank(ID), W updateWeights() end if
	//	4. 回傳 true
	-----------------------------------------------------------------------------------------------------------------*/
	public String promptCommand(String id) throws NoSuchCommandExceptions
	{
		System.out.println("輸入指令 1) G 顯示成績 (Grade)\n" + "      2) R 顯示排名 (Rank)\n" 
						   + "      3) W 更新配分 (Weight)\n" + "      4) E 離開選單 (Exit)\n");
		
		String cmd = input.next();
		if (cmd.toUpperCase().equals("E")){}
		else if (cmd.toUpperCase().equals("G")){}
		else if (cmd.toUpperCase().equals("R")){}
		else if (cmd.toUpperCase().equals("W")){}
		else
			throw new NoSuchCommandExceptions();
		
		return cmd;
	}

	/** -------------------------------------------------------------------------------------------------------------
	* 不斷檢查輸入字串是否是Q，若不是則當成ＩＤ，若Ｑ則離開
	*
	* @param 
	* @return ID 用於判別是否Q
	* @throws 
	*
	* Time estimate : 演算法設計後，才獲此資訊，如 O (n)
	* Example: 1.若螢幕輸入Ｑ則程式結束
	*          2.若螢幕輸入錯誤ID，則丟出　NoSuchIDExceptions
	*          3.若螢幕輸入正確ID，則進入本系統操作頁面
	-----------------------------------------------------------------------------------------------------------------*/
	public String promptID()
	{
		System.out.println("輸入ID或 Q (結束使用)？");
		return input.next();
	}
	
	/** -------------------------------------------------------------------------------------------------------------
	* 螢幕顯示"結束了"
	*
	* @param 
	* @return 
	* @throws 
	*
	* Time estimate : 演算法設計後，才獲此資訊，如 O (n)
	* Example:當此函式被呼叫你將會在螢幕看到"結束了"
	-----------------------------------------------------------------------------------------------------------------*/
	public void showFinishMsg()
	{
		System.out.println("結束了");
	}
	
	public void showStudentIdWrongMsg()
	{
		System.out.println("ID錯了!");
	}

	/** -------------------------------------------------------------------------------------------------------------
	* 根據ID螢幕顯示"Welcome 某某某"
	*
	* @param 
	* @return 
	* @throws 
	*
	* Time estimate : 演算法設計後，才獲此資訊，如 O (n)
	* Example:當此函式被呼叫你將會在螢幕看到"Welcome 某某某"
	-----------------------------------------------------------------------------------------------------------------*/
	public void showWelcomeMsg(String id)
	{	
		for (Entry<String, Grades> map : aGradeSystem.aTree.entrySet())
		{
			if (map.getKey().equals(id)){
				System.out.println("Welcome " + map.getValue().name);
				break;
			}
		}
	}
}
